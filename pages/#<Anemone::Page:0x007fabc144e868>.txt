 
 
 
 
 
 
 webmaster tools : comment google compte-t-il les liens internes ? • antoine brisset 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
         
  accueil  
  blog  
  contact  
     
  
  
 webmaster tools : comment google compte-t-il les liens internes ? 
     seo on-site  
  
     blog seo  >  seo on-site  
 publié le 3 may 2014 
 après avoir essayé de décrypter la façon dont google comptait  les occurences de mots-clés , j'ai cette fois-ci mené l'enquête sur l'onglet  trafic de recherche > liens internes  de google webmaster tools, qui est, de mon point de vue en tout cas, peu utilisé / analysé par les seo. l'objectif de ce test était de savoir si google comptabilisait ou non les liens multiples pointant d'une page interne a vers une page interne b (cf  first link counts rule ) 
 crawl et collecte des liens   pour réaliser ce test, j'ai à nouveau utilisé le site  keewa.net , et ce pour deux raisons :     il est inscrit dans google webmaster tools (logique)   aucune mise à jour n'a été faite sur le site depuis plusieurs mois : les données webmaster tools sont donc a priori fiables     première étape, il fallait crawler le site et répertorier tous les liens internes sortants de chaque page. pour faire cela, j'ai utilisé la gem  anemone . pour chaque url, j'ai donc collecté les liens internes grâce à la méthode “links”. il est à noter, comme expliqué  dans la doc , que cette méthode récupère uniquement les liens internes  distincts  contenus dans une page. les liens internes doublons sur une même page ne sont donc comptés qu'une fois.   comptage des liens pour chaque url   anemone stocke les liens internes de chaque page dans un array. j'ai donc mergé chacun de ces array dans un array global. puis, pour compter le nombre de liens reçus par chaque page en interne, voici comment je m'y suis pris :     def   find_links  (  array_of_arrays  ) 
   hash            =   hash  .  new  (  0  )                       # on crée un nouveau hash 
   total_links     =   array_of_arrays  .  flatten           # on crée un seul array avec tous les liens 
   total_links  .  each   do   |  v  |                           # on boucle sur chaque clé et on incrémente la valeur 
     hash  [  v  ]   +=   1 
   end 
   hash_links  .  sort_by  {   |  key  ,   value  |   value   }.  reverse   # on trie par ordre décroissant du nombre d'occurences 
 end 
    voici les données que j'obtiens dans mon hash :     { 
  "http://www.keewa.net/"  =>  5  , 
  "http://www.keewa.net/film.php"  =>  5  , 
  "http://www.keewa.net/serie.php"  =>  5  , 
  "http://www.keewa.net/musique.php"  =>  5  , 
  "http://www.keewa.net/fonctionnement.php"  =>  5 
 } 
    chaque page reçoit  5 liens  d'après mon crawler.   chaque page reçoit  4 liens  d'après google, cf capture ci-dessous.       si on compare les deux jeux de données, on remarque donc qu'il y a une différence de seulement un lien interne pour chaque page entre les deux méthodes de comptage. d'où vient cette différence ?   en cliquant sur la page /musique.php dans google webmaster tools, je peux accéder aux différentes pages qui font des liens vers la dite page /musique.php, je peux donc comparer cela à mon propre jeu de données. la différence, visiblement, c'est que mon crawler comptabilise  l'auto link , c'est-à-dire le lien qu'une page se fait vers elle-même, alors que google non. dans mon cas, sur la page /musique.php on retrouve en effet un auto lien vers /musique.php dans le menu de navigation.   conclusions   a l'issue de ce test, je tire deux conclusions intéressantes :     la première est que google webmaster tools semble ne pas compter les liens multiples d'une page vers une page b. s'il y en a plusieurs, il dédoublonne et il n'en retient qu'un.   la deuxième est que google semble ne pas prendre en compte les auto links     bien entendu, il faut prendre ces analyses avec des pincettes : d'une part, il faudrait reproduire ce test sur d'autres sites, pour vérifier si on obtient les mêmes résultats ; d'autre part, rien ne prouve que ce qui est communiqué par google dans ses outils pour les webmasters est identique à ce qui est utilisé par l'algorithme de classement.   je vous laisse donc vous faire votre propre opinion : selon vous, est-ce que ce test confirme la règle du  “first link counts”  ?        comments powered by  disqus      
  
 
 
   saint andré lez lille 
 
   06 12 71 82 78 
 
    contact@antoine-brisset.com   
 
 
      
      
      
 
  © 2015 -  antoine brisset 
 
  
 
 
